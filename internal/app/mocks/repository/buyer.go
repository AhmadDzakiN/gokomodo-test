// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/repository/buyer.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/repository/buyer.go -destination=internal/app/mocks/repository/buyer.go
//

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	entity "gokomodo-assignment/internal/app/entity"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockIBuyerRepository is a mock of IBuyerRepository interface.
type MockIBuyerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIBuyerRepositoryMockRecorder
}

// MockIBuyerRepositoryMockRecorder is the mock recorder for MockIBuyerRepository.
type MockIBuyerRepositoryMockRecorder struct {
	mock *MockIBuyerRepository
}

// NewMockIBuyerRepository creates a new mock instance.
func NewMockIBuyerRepository(ctrl *gomock.Controller) *MockIBuyerRepository {
	mock := &MockIBuyerRepository{ctrl: ctrl}
	mock.recorder = &MockIBuyerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBuyerRepository) EXPECT() *MockIBuyerRepositoryMockRecorder {
	return m.recorder
}

// GetByEmail mocks base method.
func (m *MockIBuyerRepository) GetByEmail(ctx *gin.Context, email string) (entity.Buyer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByEmail", ctx, email)
	ret0, _ := ret[0].(entity.Buyer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByEmail indicates an expected call of GetByEmail.
func (mr *MockIBuyerRepositoryMockRecorder) GetByEmail(ctx, email any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByEmail", reflect.TypeOf((*MockIBuyerRepository)(nil).GetByEmail), ctx, email)
}

// GetByID mocks base method.
func (m *MockIBuyerRepository) GetByID(ctx *gin.Context, id string) (entity.Buyer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(entity.Buyer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockIBuyerRepositoryMockRecorder) GetByID(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIBuyerRepository)(nil).GetByID), ctx, id)
}
